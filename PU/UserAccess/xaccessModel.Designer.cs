//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("xaccessModel", "FK_Activity_0_0", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.UserAccess.Users), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.UserAccess.Activity), true)]
[assembly: EdmRelationshipAttribute("xaccessModel", "FK_Users_0_0", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.UserAccess.Roles), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.UserAccess.Users), true)]
[assembly: EdmRelationshipAttribute("xaccessModel", "FK_AccessObject_0_0", "AccessCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.UserAccess.AccessCategory), "AccessObject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.UserAccess.AccessObject), true)]
[assembly: EdmRelationshipAttribute("xaccessModel", "FK_FormsToObjects_0_0", "AccessObject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.UserAccess.AccessObject), "FormsToObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.UserAccess.FormsToObjects), true)]
[assembly: EdmRelationshipAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_0_0", "AccessLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.UserAccess.AccessLevel), "UsersAccessLevelToObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.UserAccess.UsersAccessLevelToObjects), true)]
[assembly: EdmRelationshipAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_1_0", "AccessObject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.UserAccess.AccessObject), "UsersAccessLevelToObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.UserAccess.UsersAccessLevelToObjects), true)]
[assembly: EdmRelationshipAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_2_0", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.UserAccess.Users), "UsersAccessLevelToObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.UserAccess.UsersAccessLevelToObjects), true)]

#endregion

namespace PU.UserAccess
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class xaccessEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект xaccessEntities, используя строку соединения из раздела "xaccessEntities" файла конфигурации приложения.
        /// </summary>
        public xaccessEntities() : base("name=xaccessEntities", "xaccessEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта xaccessEntities.
        /// </summary>
        public xaccessEntities(string connectionString) : base(connectionString, "xaccessEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта xaccessEntities.
        /// </summary>
        public xaccessEntities(EntityConnection connection) : base(connection, "xaccessEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Activity> Activity
        {
            get
            {
                if ((_Activity == null))
                {
                    _Activity = base.CreateObjectSet<Activity>("Activity");
                }
                return _Activity;
            }
        }
        private ObjectSet<Activity> _Activity;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AccessCategory> AccessCategory
        {
            get
            {
                if ((_AccessCategory == null))
                {
                    _AccessCategory = base.CreateObjectSet<AccessCategory>("AccessCategory");
                }
                return _AccessCategory;
            }
        }
        private ObjectSet<AccessCategory> _AccessCategory;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AccessLevel> AccessLevel
        {
            get
            {
                if ((_AccessLevel == null))
                {
                    _AccessLevel = base.CreateObjectSet<AccessLevel>("AccessLevel");
                }
                return _AccessLevel;
            }
        }
        private ObjectSet<AccessLevel> _AccessLevel;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AccessObject> AccessObject
        {
            get
            {
                if ((_AccessObject == null))
                {
                    _AccessObject = base.CreateObjectSet<AccessObject>("AccessObject");
                }
                return _AccessObject;
            }
        }
        private ObjectSet<AccessObject> _AccessObject;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<FormsToObjects> FormsToObjects
        {
            get
            {
                if ((_FormsToObjects == null))
                {
                    _FormsToObjects = base.CreateObjectSet<FormsToObjects>("FormsToObjects");
                }
                return _FormsToObjects;
            }
        }
        private ObjectSet<FormsToObjects> _FormsToObjects;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<UsersAccessLevelToObjects> UsersAccessLevelToObjects
        {
            get
            {
                if ((_UsersAccessLevelToObjects == null))
                {
                    _UsersAccessLevelToObjects = base.CreateObjectSet<UsersAccessLevelToObjects>("UsersAccessLevelToObjects");
                }
                return _UsersAccessLevelToObjects;
            }
        }
        private ObjectSet<UsersAccessLevelToObjects> _UsersAccessLevelToObjects;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Activity. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToActivity(Activity activity)
        {
            base.AddObject("Activity", activity);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Roles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AccessCategory. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAccessCategory(AccessCategory accessCategory)
        {
            base.AddObject("AccessCategory", accessCategory);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AccessLevel. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAccessLevel(AccessLevel accessLevel)
        {
            base.AddObject("AccessLevel", accessLevel);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AccessObject. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAccessObject(AccessObject accessObject)
        {
            base.AddObject("AccessObject", accessObject);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet FormsToObjects. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFormsToObjects(FormsToObjects formsToObjects)
        {
            base.AddObject("FormsToObjects", formsToObjects);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet UsersAccessLevelToObjects. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsersAccessLevelToObjects(UsersAccessLevelToObjects usersAccessLevelToObjects)
        {
            base.AddObject("UsersAccessLevelToObjects", usersAccessLevelToObjects);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="AccessCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessCategory : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AccessCategory.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static AccessCategory CreateAccessCategory(global::System.Int64 id)
        {
            AccessCategory accessCategory = new AccessCategory();
            accessCategory.ID = id;
            return accessCategory;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_AccessObject_0_0", "AccessObject")]
        public EntityCollection<AccessObject> AccessObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessObject>("xaccessModel.FK_AccessObject_0_0", "AccessObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessObject>("xaccessModel.FK_AccessObject_0_0", "AccessObject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="AccessLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessLevel : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AccessLevel.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static AccessLevel CreateAccessLevel(global::System.Int64 id)
        {
            AccessLevel accessLevel = new AccessLevel();
            accessLevel.ID = id;
            return accessLevel;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_0_0", "UsersAccessLevelToObjects")]
        public EntityCollection<UsersAccessLevelToObjects> UsersAccessLevelToObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersAccessLevelToObjects>("xaccessModel.FK_UsersAccessLevelToObjects_0_0", "UsersAccessLevelToObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersAccessLevelToObjects>("xaccessModel.FK_UsersAccessLevelToObjects_0_0", "UsersAccessLevelToObjects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="AccessObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessObject : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AccessObject.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static AccessObject CreateAccessObject(global::System.Int64 id)
        {
            AccessObject accessObject = new AccessObject();
            accessObject.ID = id;
            return accessObject;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AccessCategoryID
        {
            get
            {
                return _AccessCategoryID;
            }
            set
            {
                OnAccessCategoryIDChanging(value);
                ReportPropertyChanging("AccessCategoryID");
                _AccessCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessCategoryID");
                OnAccessCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AccessCategoryID;
        partial void OnAccessCategoryIDChanging(Nullable<global::System.Int64> value);
        partial void OnAccessCategoryIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_AccessObject_0_0", "AccessCategory")]
        public AccessCategory AccessCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessCategory>("xaccessModel.FK_AccessObject_0_0", "AccessCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessCategory>("xaccessModel.FK_AccessObject_0_0", "AccessCategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessCategory> AccessCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessCategory>("xaccessModel.FK_AccessObject_0_0", "AccessCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessCategory>("xaccessModel.FK_AccessObject_0_0", "AccessCategory", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_FormsToObjects_0_0", "FormsToObjects")]
        public EntityCollection<FormsToObjects> FormsToObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FormsToObjects>("xaccessModel.FK_FormsToObjects_0_0", "FormsToObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FormsToObjects>("xaccessModel.FK_FormsToObjects_0_0", "FormsToObjects", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_1_0", "UsersAccessLevelToObjects")]
        public EntityCollection<UsersAccessLevelToObjects> UsersAccessLevelToObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersAccessLevelToObjects>("xaccessModel.FK_UsersAccessLevelToObjects_1_0", "UsersAccessLevelToObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersAccessLevelToObjects>("xaccessModel.FK_UsersAccessLevelToObjects_1_0", "UsersAccessLevelToObjects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Activity.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static Activity CreateActivity(global::System.Int64 id)
        {
            Activity activity = new Activity();
            activity.ID = id;
            return activity;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int64> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int64> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BaseName
        {
            get
            {
                return _BaseName;
            }
            set
            {
                OnBaseNameChanging(value);
                ReportPropertyChanging("BaseName");
                _BaseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BaseName");
                OnBaseNameChanged();
            }
        }
        private global::System.String _BaseName;
        partial void OnBaseNameChanging(global::System.String value);
        partial void OnBaseNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BasePath
        {
            get
            {
                return _BasePath;
            }
            set
            {
                OnBasePathChanging(value);
                ReportPropertyChanging("BasePath");
                _BasePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BasePath");
                OnBasePathChanged();
            }
        }
        private global::System.String _BasePath;
        partial void OnBasePathChanging(global::System.String value);
        partial void OnBasePathChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActionDate
        {
            get
            {
                return _ActionDate;
            }
            set
            {
                OnActionDateChanging(value);
                ReportPropertyChanging("ActionDate");
                _ActionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionDate");
                OnActionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActionDate;
        partial void OnActionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActionDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Info
        {
            get
            {
                return _Info;
            }
            set
            {
                OnInfoChanging(value);
                ReportPropertyChanging("Info");
                _Info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Info");
                OnInfoChanged();
            }
        }
        private global::System.String _Info;
        partial void OnInfoChanging(global::System.String value);
        partial void OnInfoChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_Activity_0_0", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xaccessModel.FK_Activity_0_0", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xaccessModel.FK_Activity_0_0", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xaccessModel.FK_Activity_0_0", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("xaccessModel.FK_Activity_0_0", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="FormsToObjects")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormsToObjects : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта FormsToObjects.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static FormsToObjects CreateFormsToObjects(global::System.Int64 id)
        {
            FormsToObjects formsToObjects = new FormsToObjects();
            formsToObjects.ID = id;
            return formsToObjects;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Form
        {
            get
            {
                return _Form;
            }
            set
            {
                OnFormChanging(value);
                ReportPropertyChanging("Form");
                _Form = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Form");
                OnFormChanged();
            }
        }
        private global::System.String _Form;
        partial void OnFormChanging(global::System.String value);
        partial void OnFormChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ObjectsID
        {
            get
            {
                return _ObjectsID;
            }
            set
            {
                OnObjectsIDChanging(value);
                ReportPropertyChanging("ObjectsID");
                _ObjectsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectsID");
                OnObjectsIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ObjectsID;
        partial void OnObjectsIDChanging(Nullable<global::System.Int64> value);
        partial void OnObjectsIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_FormsToObjects_0_0", "AccessObject")]
        public AccessObject AccessObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessObject>("xaccessModel.FK_FormsToObjects_0_0", "AccessObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessObject>("xaccessModel.FK_FormsToObjects_0_0", "AccessObject").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessObject> AccessObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessObject>("xaccessModel.FK_FormsToObjects_0_0", "AccessObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessObject>("xaccessModel.FK_FormsToObjects_0_0", "AccessObject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Roles.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static Roles CreateRoles(global::System.Int64 id)
        {
            Roles roles = new Roles();
            roles.ID = id;
            return roles;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_Users_0_0", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("xaccessModel.FK_Users_0_0", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("xaccessModel.FK_Users_0_0", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static Users CreateUsers(global::System.Int64 id)
        {
            Users users = new Users();
            users.ID = id;
            return users;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int64> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreate
        {
            get
            {
                return _DateCreate;
            }
            set
            {
                OnDateCreateChanging(value);
                ReportPropertyChanging("DateCreate");
                _DateCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreate");
                OnDateCreateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreate;
        partial void OnDateCreateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastAccessDate
        {
            get
            {
                return _LastAccessDate;
            }
            set
            {
                OnLastAccessDateChanging(value);
                ReportPropertyChanging("LastAccessDate");
                _LastAccessDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastAccessDate");
                OnLastAccessDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastAccessDate;
        partial void OnLastAccessDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastAccessDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Counter
        {
            get
            {
                return _Counter;
            }
            set
            {
                OnCounterChanging(value);
                ReportPropertyChanging("Counter");
                _Counter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Counter");
                OnCounterChanged();
            }
        }
        private Nullable<global::System.Int16> _Counter;
        partial void OnCounterChanging(Nullable<global::System.Int16> value);
        partial void OnCounterChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Blocked
        {
            get
            {
                return _Blocked;
            }
            set
            {
                OnBlockedChanging(value);
                ReportPropertyChanging("Blocked");
                _Blocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Blocked");
                OnBlockedChanged();
            }
        }
        private Nullable<global::System.Int16> _Blocked;
        partial void OnBlockedChanging(Nullable<global::System.Int16> value);
        partial void OnBlockedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> SysAdmin
        {
            get
            {
                return _SysAdmin;
            }
            set
            {
                OnSysAdminChanging(value);
                ReportPropertyChanging("SysAdmin");
                _SysAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SysAdmin");
                OnSysAdminChanged();
            }
        }
        private Nullable<global::System.Int16> _SysAdmin;
        partial void OnSysAdminChanging(Nullable<global::System.Int16> value);
        partial void OnSysAdminChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_Activity_0_0", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("xaccessModel.FK_Activity_0_0", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("xaccessModel.FK_Activity_0_0", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_Users_0_0", "Roles")]
        public Roles Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("xaccessModel.FK_Users_0_0", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("xaccessModel.FK_Users_0_0", "Roles").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("xaccessModel.FK_Users_0_0", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("xaccessModel.FK_Users_0_0", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_2_0", "UsersAccessLevelToObjects")]
        public EntityCollection<UsersAccessLevelToObjects> UsersAccessLevelToObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersAccessLevelToObjects>("xaccessModel.FK_UsersAccessLevelToObjects_2_0", "UsersAccessLevelToObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersAccessLevelToObjects>("xaccessModel.FK_UsersAccessLevelToObjects_2_0", "UsersAccessLevelToObjects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xaccessModel", Name="UsersAccessLevelToObjects")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersAccessLevelToObjects : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта UsersAccessLevelToObjects.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static UsersAccessLevelToObjects CreateUsersAccessLevelToObjects(global::System.Int64 id)
        {
            UsersAccessLevelToObjects usersAccessLevelToObjects = new UsersAccessLevelToObjects();
            usersAccessLevelToObjects.ID = id;
            return usersAccessLevelToObjects;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UsersID
        {
            get
            {
                return _UsersID;
            }
            set
            {
                OnUsersIDChanging(value);
                ReportPropertyChanging("UsersID");
                _UsersID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsersID");
                OnUsersIDChanged();
            }
        }
        private Nullable<global::System.Int64> _UsersID;
        partial void OnUsersIDChanging(Nullable<global::System.Int64> value);
        partial void OnUsersIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AccessObjectID
        {
            get
            {
                return _AccessObjectID;
            }
            set
            {
                OnAccessObjectIDChanging(value);
                ReportPropertyChanging("AccessObjectID");
                _AccessObjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessObjectID");
                OnAccessObjectIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AccessObjectID;
        partial void OnAccessObjectIDChanging(Nullable<global::System.Int64> value);
        partial void OnAccessObjectIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AccessLevelID
        {
            get
            {
                return _AccessLevelID;
            }
            set
            {
                OnAccessLevelIDChanging(value);
                ReportPropertyChanging("AccessLevelID");
                _AccessLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessLevelID");
                OnAccessLevelIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AccessLevelID;
        partial void OnAccessLevelIDChanging(Nullable<global::System.Int64> value);
        partial void OnAccessLevelIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_0_0", "AccessLevel")]
        public AccessLevel AccessLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessLevel>("xaccessModel.FK_UsersAccessLevelToObjects_0_0", "AccessLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessLevel>("xaccessModel.FK_UsersAccessLevelToObjects_0_0", "AccessLevel").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessLevel> AccessLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessLevel>("xaccessModel.FK_UsersAccessLevelToObjects_0_0", "AccessLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessLevel>("xaccessModel.FK_UsersAccessLevelToObjects_0_0", "AccessLevel", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_1_0", "AccessObject")]
        public AccessObject AccessObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessObject>("xaccessModel.FK_UsersAccessLevelToObjects_1_0", "AccessObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessObject>("xaccessModel.FK_UsersAccessLevelToObjects_1_0", "AccessObject").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessObject> AccessObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessObject>("xaccessModel.FK_UsersAccessLevelToObjects_1_0", "AccessObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessObject>("xaccessModel.FK_UsersAccessLevelToObjects_1_0", "AccessObject", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xaccessModel", "FK_UsersAccessLevelToObjects_2_0", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xaccessModel.FK_UsersAccessLevelToObjects_2_0", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xaccessModel.FK_UsersAccessLevelToObjects_2_0", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xaccessModel.FK_UsersAccessLevelToObjects_2_0", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("xaccessModel.FK_UsersAccessLevelToObjects_2_0", "Users", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
