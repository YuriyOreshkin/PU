//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.SQLite;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("pfrXMLModel", "FK_rsw2014_0_0", "xmlInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.Models.xmlInfo), "rsw2014", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.Models.rsw2014), true)]
[assembly: EdmRelationshipAttribute("pfrXMLModel", "FK_StaffList_0_0", "xmlInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.Models.xmlInfo), "StaffList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.Models.StaffList), true)]
[assembly: EdmRelationshipAttribute("pfrXMLModel", "FK_xmlFile_0_0", "xmlInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.Models.xmlInfo), "xmlFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.Models.xmlFile), true)]
[assembly: EdmRelationshipAttribute("pfrXMLModel", "FK_xmlInfo_0_0", "xmlInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PU.Models.xmlInfo), "xmlInfo1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PU.Models.xmlInfo), true)]

#endregion

namespace PU.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class pfrXMLEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект pfrXMLEntities, используя строку соединения из раздела "pfrXMLEntities" файла конфигурации приложения.
        /// </summary>
        public pfrXMLEntities() : base("name=pfrXMLEntities", "pfrXMLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            //this.Connection = new System.Data.SQLite.SQLiteConnection(this.Connection.ConnectionString, true);
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта pfrXMLEntities.
        /// </summary>
        public pfrXMLEntities(string connectionString) : base(connectionString, "pfrXMLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта pfrXMLEntities.
        /// </summary>
        public pfrXMLEntities(EntityConnection connection) : base(connection, "pfrXMLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы

        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<StaffList> StaffList
        {
            get
            {
                if ((_StaffList == null))
                {
                    _StaffList = base.CreateObjectSet<StaffList>("StaffList");
                }
                return _StaffList;
            }
        }
        private ObjectSet<StaffList> _StaffList;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<xmlFile> xmlFile
        {
            get
            {
                if ((_xmlFile == null))
                {
                    _xmlFile = base.CreateObjectSet<xmlFile>("xmlFile");
                }
                return _xmlFile;
            }
        }
        private ObjectSet<xmlFile> _xmlFile;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<rsw2014> rsw2014
        {
            get
            {
                if ((_rsw2014 == null))
                {
                    _rsw2014 = base.CreateObjectSet<rsw2014>("rsw2014");
                }
                return _rsw2014;
            }
        }
        private ObjectSet<rsw2014> _rsw2014;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<xmlInfo> xmlInfo
        {
            get
            {
                if ((_xmlInfo == null))
                {
                    _xmlInfo = base.CreateObjectSet<xmlInfo>("xmlInfo");
                }
                return _xmlInfo;
            }
        }
        private ObjectSet<xmlInfo> _xmlInfo;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet StaffList. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStaffList(StaffList staffList)
        {
            base.AddObject("StaffList", staffList);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet xmlFile. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToxmlFile(xmlFile xmlFile)
        {
            base.AddObject("xmlFile", xmlFile);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet rsw2014. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTorsw2014(rsw2014 rsw2014)
        {
            base.AddObject("rsw2014", rsw2014);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet xmlInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToxmlInfo(xmlInfo xmlInfo)
        {
            base.AddObject("xmlInfo", xmlInfo);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="pfrXMLModel", Name="rsw2014")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rsw2014 : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта rsw2014.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static rsw2014 Creatersw2014(global::System.Int64 id)
        {
            rsw2014 rsw2014 = new rsw2014();
            rsw2014.ID = id;
            return rsw2014;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> xmlInfo_ID
        {
            get
            {
                return _xmlInfo_ID;
            }
            set
            {
                OnxmlInfo_IDChanging(value);
                ReportPropertyChanging("xmlInfo_ID");
                _xmlInfo_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xmlInfo_ID");
                OnxmlInfo_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _xmlInfo_ID;
        partial void OnxmlInfo_IDChanging(Nullable<global::System.Int64> value);
        partial void OnxmlInfo_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RSW_2_5_1_2
        {
            get
            {
                return _RSW_2_5_1_2;
            }
            set
            {
                OnRSW_2_5_1_2Changing(value);
                ReportPropertyChanging("RSW_2_5_1_2");
                _RSW_2_5_1_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RSW_2_5_1_2");
                OnRSW_2_5_1_2Changed();
            }
        }
        private Nullable<global::System.Decimal> _RSW_2_5_1_2;
        partial void OnRSW_2_5_1_2Changing(Nullable<global::System.Decimal> value);
        partial void OnRSW_2_5_1_2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RSW_2_5_1_3
        {
            get
            {
                return _RSW_2_5_1_3;
            }
            set
            {
                OnRSW_2_5_1_3Changing(value);
                ReportPropertyChanging("RSW_2_5_1_3");
                _RSW_2_5_1_3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RSW_2_5_1_3");
                OnRSW_2_5_1_3Changed();
            }
        }
        private Nullable<global::System.Decimal> _RSW_2_5_1_3;
        partial void OnRSW_2_5_1_3Changing(Nullable<global::System.Decimal> value);
        partial void OnRSW_2_5_1_3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RSW_2_5_2_4
        {
            get
            {
                return _RSW_2_5_2_4;
            }
            set
            {
                OnRSW_2_5_2_4Changing(value);
                ReportPropertyChanging("RSW_2_5_2_4");
                _RSW_2_5_2_4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RSW_2_5_2_4");
                OnRSW_2_5_2_4Changed();
            }
        }
        private Nullable<global::System.Decimal> _RSW_2_5_2_4;
        partial void OnRSW_2_5_2_4Changing(Nullable<global::System.Decimal> value);
        partial void OnRSW_2_5_2_4Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RSW_2_5_2_5
        {
            get
            {
                return _RSW_2_5_2_5;
            }
            set
            {
                OnRSW_2_5_2_5Changing(value);
                ReportPropertyChanging("RSW_2_5_2_5");
                _RSW_2_5_2_5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RSW_2_5_2_5");
                OnRSW_2_5_2_5Changed();
            }
        }
        private Nullable<global::System.Decimal> _RSW_2_5_2_5;
        partial void OnRSW_2_5_2_5Changing(Nullable<global::System.Decimal> value);
        partial void OnRSW_2_5_2_5Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RSW_2_5_2_6
        {
            get
            {
                return _RSW_2_5_2_6;
            }
            set
            {
                OnRSW_2_5_2_6Changing(value);
                ReportPropertyChanging("RSW_2_5_2_6");
                _RSW_2_5_2_6 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RSW_2_5_2_6");
                OnRSW_2_5_2_6Changed();
            }
        }
        private Nullable<global::System.Decimal> _RSW_2_5_2_6;
        partial void OnRSW_2_5_2_6Changing(Nullable<global::System.Decimal> value);
        partial void OnRSW_2_5_2_6Changed();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_rsw2014_0_0", "xmlInfo")]
        public xmlInfo xmlInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_rsw2014_0_0", "xmlInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_rsw2014_0_0", "xmlInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xmlInfo> xmlInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_rsw2014_0_0", "xmlInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xmlInfo>("pfrXMLModel.FK_rsw2014_0_0", "xmlInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="pfrXMLModel", Name="StaffList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StaffList : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта StaffList.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static StaffList CreateStaffList(global::System.Int64 id)
        {
            StaffList staffList = new StaffList();
            staffList.ID = id;
            return staffList;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private Nullable<global::System.Int64> _Num;
        partial void OnNumChanging(Nullable<global::System.Int64> value);
        partial void OnNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIO
        {
            get
            {
                return _FIO;
            }
            set
            {
                OnFIOChanging(value);
                ReportPropertyChanging("FIO");
                _FIO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIO");
                OnFIOChanged();
            }
        }
        private global::System.String _FIO;
        partial void OnFIOChanging(global::System.String value);
        partial void OnFIOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuranceNum
        {
            get
            {
                return _InsuranceNum;
            }
            set
            {
                OnInsuranceNumChanging(value);
                ReportPropertyChanging("InsuranceNum");
                _InsuranceNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsuranceNum");
                OnInsuranceNumChanged();
            }
        }
        private global::System.String _InsuranceNum;
        partial void OnInsuranceNumChanging(global::System.String value);
        partial void OnInsuranceNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InfoType
        {
            get
            {
                return _InfoType;
            }
            set
            {
                OnInfoTypeChanging(value);
                ReportPropertyChanging("InfoType");
                _InfoType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InfoType");
                OnInfoTypeChanged();
            }
        }
        private global::System.String _InfoType;
        partial void OnInfoTypeChanging(global::System.String value);
        partial void OnInfoTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreate
        {
            get
            {
                return _DateCreate;
            }
            set
            {
                OnDateCreateChanging(value);
                ReportPropertyChanging("DateCreate");
                _DateCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreate");
                OnDateCreateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreate;
        partial void OnDateCreateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> XmlInfoID
        {
            get
            {
                return _XmlInfoID;
            }
            set
            {
                OnXmlInfoIDChanging(value);
                ReportPropertyChanging("XmlInfoID");
                _XmlInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XmlInfoID");
                OnXmlInfoIDChanged();
            }
        }
        private Nullable<global::System.Int64> _XmlInfoID;
        partial void OnXmlInfoIDChanging(Nullable<global::System.Int64> value);
        partial void OnXmlInfoIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StaffID
        {
            get
            {
                return _StaffID;
            }
            set
            {
                OnStaffIDChanging(value);
                ReportPropertyChanging("StaffID");
                _StaffID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StaffID");
                OnStaffIDChanged();
            }
        }
        private Nullable<global::System.Int64> _StaffID;
        partial void OnStaffIDChanging(Nullable<global::System.Int64> value);
        partial void OnStaffIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FormsRSW_6_1_ID
        {
            get
            {
                return _FormsRSW_6_1_ID;
            }
            set
            {
                OnFormsRSW_6_1_IDChanging(value);
                ReportPropertyChanging("FormsRSW_6_1_ID");
                _FormsRSW_6_1_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormsRSW_6_1_ID");
                OnFormsRSW_6_1_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _FormsRSW_6_1_ID;
        partial void OnFormsRSW_6_1_IDChanging(Nullable<global::System.Int64> value);
        partial void OnFormsRSW_6_1_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_StaffList_0_0", "xmlInfo")]
        public xmlInfo xmlInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_StaffList_0_0", "xmlInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_StaffList_0_0", "xmlInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xmlInfo> xmlInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_StaffList_0_0", "xmlInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xmlInfo>("pfrXMLModel.FK_StaffList_0_0", "xmlInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="pfrXMLModel", Name="xmlFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xmlFile : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта xmlFile.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static xmlFile CreatexmlFile(global::System.Int64 id)
        {
            xmlFile xmlFile = new xmlFile();
            xmlFile.ID = id;
            return xmlFile;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XmlContent
        {
            get
            {
                return _XmlContent;
            }
            set
            {
                OnXmlContentChanging(value);
                ReportPropertyChanging("XmlContent");
                _XmlContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XmlContent");
                OnXmlContentChanged();
            }
        }
        private global::System.String _XmlContent;
        partial void OnXmlContentChanging(global::System.String value);
        partial void OnXmlContentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> XmlInfoID
        {
            get
            {
                return _XmlInfoID;
            }
            set
            {
                OnXmlInfoIDChanging(value);
                ReportPropertyChanging("XmlInfoID");
                _XmlInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("XmlInfoID");
                OnXmlInfoIDChanged();
            }
        }
        private Nullable<global::System.Int64> _XmlInfoID;
        partial void OnXmlInfoIDChanging(Nullable<global::System.Int64> value);
        partial void OnXmlInfoIDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_xmlFile_0_0", "xmlInfo")]
        public xmlInfo xmlInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlFile_0_0", "xmlInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlFile_0_0", "xmlInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xmlInfo> xmlInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlFile_0_0", "xmlInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlFile_0_0", "xmlInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="pfrXMLModel", Name="xmlInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class xmlInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта xmlInfo.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static xmlInfo CreatexmlInfo(global::System.Int64 id)
        {
            xmlInfo xmlInfo = new xmlInfo();
            xmlInfo.ID = id;
            return xmlInfo;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private Nullable<global::System.Int64> _Num;
        partial void OnNumChanging(Nullable<global::System.Int64> value);
        partial void OnNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CountDoc
        {
            get
            {
                return _CountDoc;
            }
            set
            {
                OnCountDocChanging(value);
                ReportPropertyChanging("CountDoc");
                _CountDoc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountDoc");
                OnCountDocChanged();
            }
        }
        private Nullable<global::System.Int64> _CountDoc;
        partial void OnCountDocChanging(Nullable<global::System.Int64> value);
        partial void OnCountDocChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CountStaff
        {
            get
            {
                return _CountStaff;
            }
            set
            {
                OnCountStaffChanging(value);
                ReportPropertyChanging("CountStaff");
                _CountStaff = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountStaff");
                OnCountStaffChanged();
            }
        }
        private Nullable<global::System.Int64> _CountStaff;
        partial void OnCountStaffChanging(Nullable<global::System.Int64> value);
        partial void OnCountStaffChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocType
        {
            get
            {
                return _DocType;
            }
            set
            {
                OnDocTypeChanging(value);
                ReportPropertyChanging("DocType");
                _DocType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocType");
                OnDocTypeChanged();
            }
        }
        private global::System.String _DocType;
        partial void OnDocTypeChanging(global::System.String value);
        partial void OnDocTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int16> _Year;
        partial void OnYearChanging(Nullable<global::System.Int16> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Quarter
        {
            get
            {
                return _Quarter;
            }
            set
            {
                OnQuarterChanging(value);
                ReportPropertyChanging("Quarter");
                _Quarter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quarter");
                OnQuarterChanged();
            }
        }
        private Nullable<global::System.Byte> _Quarter;
        partial void OnQuarterChanging(Nullable<global::System.Byte> value);
        partial void OnQuarterChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> YearKorr
        {
            get
            {
                return _YearKorr;
            }
            set
            {
                OnYearKorrChanging(value);
                ReportPropertyChanging("YearKorr");
                _YearKorr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearKorr");
                OnYearKorrChanged();
            }
        }
        private Nullable<global::System.Int16> _YearKorr;
        partial void OnYearKorrChanging(Nullable<global::System.Int16> value);
        partial void OnYearKorrChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> QuarterKorr
        {
            get
            {
                return _QuarterKorr;
            }
            set
            {
                OnQuarterKorrChanging(value);
                ReportPropertyChanging("QuarterKorr");
                _QuarterKorr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuarterKorr");
                OnQuarterKorrChanged();
            }
        }
        private Nullable<global::System.Byte> _QuarterKorr;
        partial void OnQuarterKorrChanging(Nullable<global::System.Byte> value);
        partial void OnQuarterKorrChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreate
        {
            get
            {
                return _DateCreate;
            }
            set
            {
                OnDateCreateChanging(value);
                ReportPropertyChanging("DateCreate");
                _DateCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreate");
                OnDateCreateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreate;
        partial void OnDateCreateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SourceID
        {
            get
            {
                return _SourceID;
            }
            set
            {
                OnSourceIDChanging(value);
                ReportPropertyChanging("SourceID");
                _SourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceID");
                OnSourceIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SourceID;
        partial void OnSourceIDChanging(Nullable<global::System.Int64> value);
        partial void OnSourceIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UniqGUID
        {
            get
            {
                return _UniqGUID;
            }
            set
            {
                OnUniqGUIDChanging(value);
                ReportPropertyChanging("UniqGUID");
                _UniqGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqGUID");
                OnUniqGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UniqGUID;
        partial void OnUniqGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnUniqGUIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InsurerID
        {
            get
            {
                return _InsurerID;
            }
            set
            {
                OnInsurerIDChanging(value);
                ReportPropertyChanging("InsurerID");
                _InsurerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsurerID");
                OnInsurerIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InsurerID;
        partial void OnInsurerIDChanging(Nullable<global::System.Int64> value);
        partial void OnInsurerIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormatType
        {
            get
            {
                return _FormatType;
            }
            set
            {
                OnFormatTypeChanging(value);
                ReportPropertyChanging("FormatType");
                _FormatType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormatType");
                OnFormatTypeChanged();
            }
        }
        private global::System.String _FormatType;
        partial void OnFormatTypeChanging(global::System.String value);
        partial void OnFormatTypeChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_rsw2014_0_0", "rsw2014")]
        public EntityCollection<rsw2014> rsw2014
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rsw2014>("pfrXMLModel.FK_rsw2014_0_0", "rsw2014");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rsw2014>("pfrXMLModel.FK_rsw2014_0_0", "rsw2014", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_StaffList_0_0", "StaffList")]
        public EntityCollection<StaffList> StaffList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StaffList>("pfrXMLModel.FK_StaffList_0_0", "StaffList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StaffList>("pfrXMLModel.FK_StaffList_0_0", "StaffList", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_xmlFile_0_0", "xmlFile")]
        public EntityCollection<xmlFile> xmlFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xmlFile>("pfrXMLModel.FK_xmlFile_0_0", "xmlFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xmlFile>("pfrXMLModel.FK_xmlFile_0_0", "xmlFile", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_xmlInfo_0_0", "xmlInfo1")]
        public EntityCollection<xmlInfo> xmlInfo1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<xmlInfo>("pfrXMLModel.FK_xmlInfo_0_0", "xmlInfo1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<xmlInfo>("pfrXMLModel.FK_xmlInfo_0_0", "xmlInfo1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("pfrXMLModel", "FK_xmlInfo_0_0", "xmlInfo")]
        public xmlInfo xmlInfo2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlInfo_0_0", "xmlInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlInfo_0_0", "xmlInfo").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<xmlInfo> xmlInfo2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlInfo_0_0", "xmlInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<xmlInfo>("pfrXMLModel.FK_xmlInfo_0_0", "xmlInfo", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
